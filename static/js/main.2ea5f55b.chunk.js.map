{"version":3,"sources":["components/contactForm/contactForm.module.css","transition/slide.module.css","components/contactList/contactListItem/contactListItem.module.css","components/filter/filter.module.css","components/App.module.css","components/contactList/contactList.module.css","transition/scale.module.css","transition/fade.module.css","transition/rotate.module.css","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","doublicateContact","props","contacts","map","contact","alert","includes","target","value","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","showIcon","newContact","id","uuidv4","getContactInfo","setState","handleChange","this","className","styles","form","onSubmit","label","input","placeholder","minLength","maxLength","onChange","button","Component","ContactListItem","deleteContact","item","onClick","ContactList","TransitionGroup","component","list","CSSTransition","key","timeout","unmountOnExit","classNames","slideTransition","Filter","filter","searchFilter","proptTypes","PropTypes","string","func","filterContacts","toLowerCase","App","isVisible","prev","filteredContacts","length","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","in","scaleTransition","mountOnEnter","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,2BCAlID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,gBCAhID,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,gBCAhED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,gBCAxDD,EAAOC,QAAU,CAAC,MAAQ,qB,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,6ECAhID,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,YAAc,0BAA0B,KAAO,mBAAmB,WAAa,2B,gBCA7HD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,YAAc,4BAA4B,KAAO,qBAAqB,WAAa,6B,sKCOtHC,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAAAC,GACbA,EAAEC,iBADgB,MAEO,EAAKL,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACRI,EAAoB,EAAKC,MAAMC,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQT,QACrE,IAAMA,IAAQC,EACZ,OAAOS,MAAM,2BAEf,GAAIL,EAAkBM,SAASR,EAAES,OAAOZ,KAAKa,OAE3C,OAAOC,QAAMC,gBAAgB,CAC3BC,MAAO,WACPC,QAAS,wBACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,UAAU,KAId,IAAMC,EAAa,CAAEC,GAAIC,cAAU5B,OAAMC,UACzC,EAAKK,MAAMuB,eAAeH,GAC1B,EAAKI,SAAS,CACZ9B,KAAM,GACNC,OAAQ,MAjChB,EAsCE8B,aAAe,SAAA5B,GACb,EAAK2B,SAAL,eAAiB3B,EAAES,OAAOZ,KAAOG,EAAES,OAAOC,SAvC9C,uDA0CY,IAAD,EACkBmB,KAAKjC,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,oCACE,kBAAC,IAAD,MACA,0BAAMgC,UAAWC,IAAOC,KAAMC,SAAUJ,KAAK9B,cAC3C,2BAAO+B,UAAWC,IAAOG,OAAzB,OAEE,2BACEJ,UAAWC,IAAOI,MAClBpB,KAAK,OACLlB,KAAK,OACLa,MAAOb,EACPuC,YAAY,kBACZC,UAAU,IACVC,UAAU,KACVC,SAAUV,KAAKD,gBAGnB,2BAAOE,UAAWC,IAAOG,OAAzB,SAEE,2BACEJ,UAAWC,IAAOI,MAClBpB,KAAK,MACLlB,KAAK,SACLa,MAAOZ,EACPsC,YAAY,sBACZC,UAAU,KACVC,UAAU,KACVC,SAAUV,KAAKD,gBAGnB,4BAAQE,UAAWC,IAAOS,OAAQzB,KAAK,UAAvC,qBA1EV,GAAiC0B,c,iCCJpBC,EAAkB,SAAC,GAAD,IAAGpC,EAAH,EAAGA,QAASqC,EAAZ,EAAYA,cAAZ,OAC7B,oCACE,wBAAIb,UAAWC,IAAOa,MAAOtC,EAAQT,KAAO,KAAOS,EAAQR,QAC3D,4BAAQgC,UAAWC,IAAOS,OAAQhB,GAAIlB,EAAQkB,GAAIqB,QAASF,GAA3D,Y,kCCASG,EAAc,SAAC,GAAD,IAAG1C,EAAH,EAAGA,SAAUuC,EAAb,EAAaA,cAAb,OACzB,kBAACI,EAAA,EAAD,CAAiBC,UAAU,KAAKlB,UAAWC,IAAOkB,MAC/C7C,EAASC,KAAI,SAAAC,GAAO,OACnB,kBAAC4C,EAAA,EAAD,CAAeC,IAAK7C,EAAQkB,GAAI4B,QAAS,IAAKC,eAAa,EAACC,WAAYC,KACxE,kBAAC,EAAD,CACEJ,IAAK7C,EAAQkB,GACblB,QAASA,EACTqC,cAAeA,U,iCCVVa,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAX,OACpB,oCACE,wBAAI5B,UAAWC,IAAOlB,OAAtB,yBACA,2BACEiB,UAAWC,IAAOI,MAClBzB,MAAO+C,EACPlB,SAAUmB,MAKhBF,EAAOG,WAAa,CAClBF,OAAQG,IAAUC,OAClBH,aAAcE,IAAUE,M,oDCNpBC,EAAiB,SAACN,EAAQrD,GAC9B,OAAOA,EAASqD,QAAO,SAAAnD,GAAO,OAC5BA,EAAQT,KAAKmE,cAAcxD,SAASiD,EAAOO,mBAI1BC,E,4MACnBrE,MAAQ,CACNQ,SAAU,GACVqD,OAAQ,GACRS,WAAW,G,EAmBbxC,eAAiB,SAAAH,GACf,EAAKI,UAAS,SAAAwC,GAAI,MAAK,CACrB/D,SAAS,GAAD,mBAAM+D,EAAK/D,UAAX,CAAqBmB,S,EAIjCmC,aAAe,SAAA1D,GACb,EAAK2B,SAAS,CAAE8B,OAAQzD,EAAES,OAAOC,S,EAGnCiC,cAAgB,SAAA3C,GAAM,IAAD,EACU,EAAKJ,MAA1BQ,EADW,EACXA,SAAUqD,EADC,EACDA,OACZW,EAAmBL,EAAeN,EAAQrD,GAC1CoB,EAAKxB,EAAES,OAAOe,GACpB,EAAKG,UAAS,SAAAwC,GAAI,MAAK,CACrB/D,SAAS,YAAK+D,EAAK/D,SAASqD,QAAO,SAAAnD,GAAO,OAAIA,EAAQkB,KAAOA,UAE/B,IAA5B4C,EAAiBC,QACnB,EAAK1C,SAAS,CAAE8B,OAAQ,M,kEAjC1B5B,KAAKF,SAAS,CACZuC,WAAW,IAEb,IAAMI,EAAoBC,aAAaC,QAAQ,YAC3CF,GACFzC,KAAKF,SAAS,CAAEvB,SAAUqE,KAAKC,MAAMJ,O,yCAItBK,EAAWC,GACxBA,EAAUxE,WAAayB,KAAKjC,MAAMQ,UACpCmE,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUjD,KAAKjC,MAAMQ,a,+BA0BrD,IAAD,EACiCyB,KAAKjC,MAArCQ,EADD,EACCA,SAAUqD,EADX,EACWA,OAAQS,EADnB,EACmBA,UACpBE,EAAmBL,EAAeN,EAAQrD,GAChD,OACE,oCACE,kBAAC8C,EAAA,EAAD,CACE6B,GAAIb,EACJd,QAAS,IACTE,WAAY0B,IACZC,cAAY,EACZ5B,eAAa,GAEb,wBAAIvB,UAAWC,IAAOlB,OAAtB,cAEF,kBAAC,EAAD,CAAaa,eAAgBG,KAAKH,eAAgBtB,SAAUA,IAC5D,wBAAI0B,UAAWC,IAAOlB,OAAtB,aACET,EAASiE,QAAU,GAAuB,IAAlBZ,EAAOY,SAC/B,kBAAC,EAAD,CAAQZ,OAAQA,EAAQC,aAAc7B,KAAK6B,eAE7C,kBAAC,EAAD,CACEtD,SAAUgE,EACVX,OAAQA,EACRd,cAAed,KAAKc,qB,GAnEGF,aCZjCyC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.2ea5f55b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__xQcJd\",\"label\":\"contactForm_label__30lmn\",\"input\":\"contactForm_input__1qzSc\",\"button\":\"contactForm_button__3nMTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3jx2B\",\"enterActive\":\"slide_enterActive__22FTp\",\"exit\":\"slide_exit__2GgKp\",\"exitActive\":\"slide_exitActive__2K5De\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactListItem_item__CNcyP\",\"button\":\"contactListItem_button__1SU05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"filter_title__25vg8\",\"input\":\"filter_input__1uKW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__399H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__3KbwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"scale_enter__ME96H\",\"enterActive\":\"scale_enterActive__2XYCr\",\"exit\":\"scale_exit__1y_yi\",\"exitActive\":\"scale_exitActive__2lqvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__2g0pl\",\"enterActive\":\"fade_enterActive__kTv0L\",\"exit\":\"fade_exit__LIDhn\",\"exitActive\":\"fade_exitActive__e1PCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"rotate_enter__1N-S-\",\"enterActive\":\"rotate_enterActive__24d2r\",\"exit\":\"rotate_exit__3rkER\",\"exitActive\":\"rotate_exitActive__2IAX5\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './contactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const doublicateContact = this.props.contacts.map(contact => contact.name);\r\n    if (!(name && number)) {\r\n      return alert('Please, fill all fields');\r\n    }\r\n    if (doublicateContact.includes(e.target.name.value)) {\r\n      // return alert('Contact already exist');\r\n      return store.addNotification({\r\n        title: 'Oooops:(',\r\n        message: 'Contact already exist',\r\n        type: 'danger',\r\n        insert: 'top',\r\n        container: 'top-right',\r\n        animationIn: ['animated', 'fadeIn'],\r\n        animationOut: ['animated', 'fadeOut'],\r\n        dismiss: {\r\n          duration: 1000,\r\n          showIcon: true\r\n        },\r\n      });\r\n    } else {\r\n      const newContact = { id: uuidv4(), name, number };\r\n      this.props.getContactInfo(newContact);\r\n      this.setState({\r\n        name: '',\r\n        number: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <ReactNotification />\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter full name\"\r\n              minLength=\"4\"\r\n              maxLength=\"20\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              placeholder=\"+38 (___) ___ __ __\"\r\n              minLength=\"10\"\r\n              maxLength=\"13\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  getContactInfo: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport styles from '../contactListItem/contactListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ContactListItem = ({ contact, deleteContact }) => (\r\n  <>\r\n    <li className={styles.item}>{contact.name + ': ' + contact.number}</li>\r\n    <button className={styles.button} id={contact.id} onClick={deleteContact}>\r\n      Delete\r\n    </button>\r\n  </>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { ContactListItem } from './contactListItem/ContactListItem';\r\nimport styles from './contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport slideTransition from '../../transition/slide.module.css';\r\n\r\nexport const ContactList = ({ contacts, deleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.list}>\r\n    {contacts.map(contact => (\r\n      <CSSTransition key={contact.id} timeout={250} unmountOnExit classNames={slideTransition}>\r\n      <ContactListItem\r\n        key={contact.id}\r\n        contact={contact}\r\n        deleteContact={deleteContact}\r\n      />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport styles from '../filter/filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Filter = ({ filter, searchFilter }) => (\r\n  <>\r\n    <h3 className={styles.title}>Find contacts by name</h3>\r\n    <input\r\n      className={styles.input}\r\n      value={filter}\r\n      onChange={searchFilter}\r\n    ></input>\r\n  </>\r\n);\r\n\r\nFilter.proptTypes = {\r\n  filter: PropTypes.string,\r\n  searchFilter: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport { ContactForm } from '../components/contactForm/ContactForm';\nimport { ContactList } from '../components/contactList/ContactList';\nimport { Filter } from '../components/filter/Filter';\nimport { CSSTransition} from 'react-transition-group';\nimport styles from '../components/App.module.css';\nimport fadeTransition from '../transition/fade.module.css';\nimport slideTransition from '../transition/slide.module.css';\nimport rotateTransition from '../transition/rotate.module.css'\nimport scaleTransition from '../transition/scale.module.css'\n\nconst filterContacts = (filter, contacts) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    isVisible: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isVisible: true\n    });\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  getContactInfo = newContact => {\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newContact],\n    }));\n  };\n\n  searchFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  deleteContact = e => {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(filter, contacts);\n    const id = e.target.id;\n    this.setState(prev => ({\n      contacts: [...prev.contacts.filter(contact => contact.id !== id)],\n    }));\n    if (filteredContacts.length === 1) {\n      this.setState({ filter: '' });\n    }\n  };\n\n  render() {\n    const { contacts, filter, isVisible } = this.state;\n    const filteredContacts = filterContacts(filter, contacts);\n    return (\n      <>\n        <CSSTransition\n          in={isVisible}\n          timeout={500}\n          classNames={scaleTransition}\n          mountOnEnter\n          unmountOnExit\n        >\n          <h2 className={styles.title}>Phonebook</h2>\n        </CSSTransition>\n        <ContactForm getContactInfo={this.getContactInfo} contacts={contacts} />\n        <h2 className={styles.title}>Contacts</h2>\n        {(contacts.length >= 2 || filter.length !== 0) && (\n          <Filter filter={filter} searchFilter={this.searchFilter} />\n        )}\n        <ContactList\n          contacts={filteredContacts}\n          filter={filter}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styleheet/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}